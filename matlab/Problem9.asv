close all ; clear all; clc;
%Download hwk7files_forMycourses.zip and place them into an appropriate
%hwk7 directory. Update the two paths below for your machine
nntraintool('close')
warning('off','all')
warning
cd 'E:\Machine Intelligence\Term Project\matlab'
addpath 'E:\Machine Intelligence\HW6\libsvm-3.18\windows'
% We will use mnist hand written digits, '0' through '9'
files={'AMD','BAC','CVX','DOW','DUK','GOOGL','JPM','M','NASDAQ','PYPL','QQQ','S&P','V','VZ','XOM'};




results={'Stock','SVM','nnet1','nnet2','ff1','ff2','ff3','ff4'};

parfor f = 1:size(files,2)
    str=[files{f},'.txt'];
    data = load(str);

    X = data(:,[1,2,3,4,5,6]);
    y = data(:,7);

    n = size(X, 1); %number of samples = 5000, 500 from each class
    D = size(X,2); %number of dimensions/sample. 20x20=400
    C = length(unique(y)); %number of classes, class values are 1...10, where 10 is a digit '0'
    
    options=[];
    accuracies={files{f}};
    options.confusionMatrix = 'False';
    options.numberOfFolds = 5;
    options.method = 'SVM';
    [confusionMatrix_svm,accuracies{1,2}] = classify677_hwk7(X,y,options);
    
    options.method = 'nnet';
    options.nnet_hiddenLayerSize = 25;
    [confusionMatrix_nnet1,accuracies{1,3}] = classify677_hwk7(X,y,options);
    
    options.method = 'nnet';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_nnet2,accuracies{1,4}] = classify677_hwk7(X,y,options);
    
    options.method = 'feedForward';
    options.nnet_hiddenLayerSize = 25;
    [confusionMatrix_feedForward1,accuracies{1,5}] = classify677_hwk7(X,y,options);
    
    options.method = 'feedForward';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_hiddenLayerSize = [25 10 4];
    [confusionMatrix_feedForward3,accuracies{1,7}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_algo = 'trainlm';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_algo = 'trainbfg';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_algo = 'trainrp';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_algo = 'traincgb';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_algo = 'traincgf';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_algo = 'trainlm';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_algo = 'trainlm';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    options.method = 'feedForward';
    options.nnet_algo = 'trainlm';
    options.nnet_hiddenLayerSize = [25 10];
    [confusionMatrix_feedForward2,accuracies{1,6}] = classify677_hwk7(X,y,options);

    
    
    results(f+1,:) = accuracies;
    
end

max=zeros(1,size(results,2));
nmax={'Highest:'};
for i = 2:size(results,2)
    for k=2:size(results,1)
       if cell2mat(results(k,i)) > max(i)
           max(i)=cell2mat(results(k,i));
           nmax(i)=results(k,1);
       end
    end
end
tmax=mat2cell(max,1,size(results,2));
results(size(results,1)+1,:)=nmax;
tlen=size(results,1)+1;
for i = 2:size(results,2)
    results(tlen,i)=num2cell(max(1,i));
end



results















